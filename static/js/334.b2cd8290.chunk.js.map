{"version":3,"file":"static/js/334.b2cd8290.chunk.js","mappings":"qLAIaA,E,MAAcC,GAAAA,OAAa,CACtCC,QCHsB,+BDItBC,OAAQ,CACNC,QCPmB,uC,4JCGVC,EAAU,mCAAG,WAAMC,GAAN,gGAECN,EAAAA,EAAAA,IAAA,iBAA0BM,EAA1B,aAFD,cAEhBC,EAFgB,yBAGfA,GAHe,iCAKtBC,EAAAA,EAAAA,IAAM,uBAAwB,IALR,yDAAH,sD,mBCDVC,EAAiBC,EAAAA,GAAAA,GAAH,oIAQdC,EAAeD,EAAAA,GAAAA,GAAH,wJASZE,EAAiBF,EAAAA,GAAAA,IAAH,uGAOdG,EAAeH,EAAAA,GAAAA,EAAH,qGAId,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,Q,SCvBlBC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,0BACE,SAACV,EAAD,UACGU,EAAQC,KAAI,SAAAC,GACX,OACE,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IACED,EAAOE,aACH,kCAAoCF,EAAOE,aAC3C,6EAENC,IAAI,MAEN,SAACX,EAAD,UAAeQ,EAAOI,SATLJ,EAAOK,mBCKtC,EAba,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,WACR1B,EAAWwB,GAASG,MAAK,SAAAC,GACvBL,EAAWK,EAAOC,KAAKC,WAExB,CAACN,KAEG,yBAAMV,IAAW,SAACD,EAAD,CAAUC,QAASA","sources":["api/axios.js","constants/constants.js","api/getCredits.js","pages/MovieDetails/Cast/CastList.styled.js","pages/MovieDetails/Cast/CastList.jsx","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY } from 'constants/constants';\nimport { BASE_URL } from 'constants/constants';\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const API_KEY = '39bf866453609a0bc24965bcd414ff90';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import { customAxios } from './axios';\nimport { toast } from 'react-toastify';\n\nexport const getCredits = async id => {\n  try {\n    const response = await customAxios.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast('Sorry, backend error', {});\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  margin: -5px;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  max-width: 80px;\n  margin: 5px;\n  flex-grow: 1;\n`;\n\nexport const CastListPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  margin-bottom: 3px;\n`;\n\nexport const CastListName = styled.p`\n  display: block;\n  text-align: center;\n  font-size: 10px;\n  color: ${p => p.theme.colors.text};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  CastListStyled,\n  CastListItem,\n  CastListPoster,\n  CastListName,\n} from './CastList.styled';\nexport const CastList = ({ credits }) => {\n  return (\n    <div>\n      <CastListStyled>\n        {credits.map(credit => {\n          return (\n            <CastListItem key={credit.credit_id}>\n              <CastListPoster\n                src={\n                  credit.profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + credit.profile_path\n                    : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                }\n                alt=\"\"\n              />\n              <CastListName>{credit.name}</CastListName>\n            </CastListItem>\n          );\n        })}\n      </CastListStyled>\n    </div>\n  );\n};\n\nCastList.propTypes = {\n  credits: PropTypes.array.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCredits } from 'api/getCredits';\nimport { CastList } from './CastList';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCredits(movieId).then(result => {\n      setCredits(result.data.cast);\n    });\n  }, [movieId]);\n\n  return <div>{credits && <CastList credits={credits} />}</div>;\n};\n\nexport default Cast;\n"],"names":["customAxios","axios","baseURL","params","api_key","getCredits","id","response","toast","CastListStyled","styled","CastListItem","CastListPoster","CastListName","p","theme","colors","text","CastList","credits","map","credit","src","profile_path","alt","name","credit_id","useState","setCredits","movieId","useParams","useEffect","then","result","data","cast"],"sourceRoot":""}