{"version":3,"file":"static/js/71.ae085b21.chunk.js","mappings":"oLAIaA,E,MAAcC,GAAAA,OAAa,CACtCC,QCHsB,+BDItBC,OAAQ,CACNC,QCPmB,uC,mKCEVC,EAAW,mCAAG,WAAMC,GAAN,gGAEAN,EAAAA,EAAAA,IAAA,iBAA0BM,IAF1B,cAEjBC,EAFiB,yBAGhBA,GAHgB,gCAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDCGXC,EAAkB,SAAAC,GAE7B,OAD2B,GAARA,EAAa,K,mBCJrBC,EAAaC,EAAAA,GAAAA,GAAH,0CAIVC,EAAiBD,EAAAA,GAAAA,GAAH,6E,SCHdE,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACvB,OACE,SAACJ,EAAD,UACGI,EAAYC,KAAI,SAAAC,GACf,OAAO,SAACJ,EAAD,UAAgCI,EAAMC,MAAjBD,EAAMZ,UCL7Bc,EAAgBP,EAAAA,GAAAA,IAAH,sGAIf,SAAAQ,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QAGlBC,EAAkBZ,EAAAA,GAAAA,IAAH,mFAMfa,EAAiBb,EAAAA,GAAAA,GAAH,6FAGhB,SAAAQ,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAGlBC,EAAiBf,EAAAA,GAAAA,IAAH,gDCXdgB,EAAY,SAAC,GAAe,IJVTlB,EIUJmB,EAAY,EAAZA,MAC1B,OACE,UAACV,EAAD,YACE,SAACK,EAAD,CACEM,IACED,EAAME,YACF,kCAAoCF,EAAME,YAC1C,6EAENC,IAAI,GACJC,MAAM,WAER,4BACE,UAACR,EAAD,WACGI,EAAMK,MACN,MACD,iCJ1BsBxB,EI0BGmB,EAAMM,aJzBnBzB,EAAM0B,MAAM,EAAG,IIyB3B,WAEF,UAACT,EAAD,uBACU,0BAAOlB,EAAgBoB,EAAMQ,oBAEvC,UAACV,EAAD,wBAA2BE,EAAMS,aACjC,UAACX,EAAD,sBAEG,SAACb,EAAD,CAAQC,YAAac,EAAMU,mB,UC9BzBC,GAAW5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,uWAOV,SAAAQ,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QAOlB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAIpBgB,GAAe9B,EAAAA,EAAAA,IAAO+B,EAAAA,IAAP/B,CAAH,gFC0BzB,EA1CqB,WAAO,IAAD,IACjBgC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAQ,qBAAGC,EAAAA,EAAAA,MAAcC,aAAjB,aAAG,EAAqBC,YAAxB,QAAgC,IAQ9C,OANAC,EAAAA,EAAAA,YAAU,WACRjD,EAAYwC,GAASU,MAAK,SAAAC,GACxBP,EAAaO,EAAOC,WAErB,CAACZ,KAGF,4BACE,UAACJ,EAAD,CAAUiB,GAAIR,EAAd,WACE,SAACP,EAAD,IADF,oBAICK,IACC,4BACE,SAACnB,EAAD,CAAWC,MAAOkB,KAClB,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAG,UAAUN,MAAO,CAAEC,KAAMH,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAAMQ,GAAG,UAAUN,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,EAAAS,SAAD,WACE,SAAC,KAAD","sources":["api/axios.js","constants/constants.js","api/getFullInfo.js","utils/utils.js","components/Genres/Genres.styled.js","components/Genres/Genres.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/common/BackLink.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY } from 'constants/constants';\nimport { BASE_URL } from 'constants/constants';\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const API_KEY = '39bf866453609a0bc24965bcd414ff90';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import { customAxios } from './axios';\n\nexport const getFullInfo = async id => {\n  try {\n    const response = await customAxios.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export const releaseNormalize = value => {\n  const releaseYear = value.slice(0, 4);\n  return releaseYear;\n};\n\nexport const ratingNormalize = value => {\n  const voteRating = value * 10 + '%';\n  return voteRating;\n};\n","import styled from 'styled-components';\n\nexport const GenresList = styled.ul`\n  display: flex;\n`;\n\nexport const GenresListItem = styled.li`\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { GenresList, GenresListItem } from './Genres.styled';\n\nexport const Genres = ({ movieGenres }) => {\n  return (\n    <GenresList>\n      {movieGenres.map(genre => {\n        return <GenresListItem key={genre.id}>{genre.name}</GenresListItem>;\n      })}\n    </GenresList>\n  );\n};\n\nGenres.propTypes = {\n  movieGenres: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieInfoCard = styled.div`\n  display: flex;\n  max-width: 800px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const MovieInfoPoster = styled.img`\n  display: block;\n  width: 200px;\n  margin-right: 20px;\n`;\n\nexport const MovieInfoTitle = styled.h3`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const MovieInfoBlock = styled.div`\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { releaseNormalize, ratingNormalize } from 'utils/utils';\nimport { Genres } from 'components/Genres/Genres';\nimport {\n  MovieInfoCard,\n  MovieInfoPoster,\n  MovieInfoTitle,\n  MovieInfoBlock,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <MovieInfoCard>\n      <MovieInfoPoster\n        src={\n          movie.poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n        }\n        alt=\"\"\n        width=\"100px\"\n      />\n      <div>\n        <MovieInfoTitle>\n          {movie.title}\n          {'  '}\n          <span>({releaseNormalize(movie.release_date)})</span>\n        </MovieInfoTitle>\n        <MovieInfoBlock>\n          Rating: <span>{ratingNormalize(movie.vote_average)}</span>\n        </MovieInfoBlock>\n        <MovieInfoBlock>Overview: {movie.overview}</MovieInfoBlock>\n        <MovieInfoBlock>\n          Genres:\n          {<Genres movieGenres={movie.genres} />}\n        </MovieInfoBlock>\n      </div>\n    </MovieInfoCard>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { MdOutlineArrowBack } from 'react-icons/md';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  margin-bottom: 40px;\n  padding: 5px;\n  color: ${p => p.theme.colors.text};\n  background-color: #dde1e7;\n  border-radius: 25px;\n  box-shadow: 2px 2px 5px #babecc, -5px -5px 10px #ffffff73;\n  transition: color 250ms ease-in-out;\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const BackLinkIcon = styled(MdOutlineArrowBack)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getFullInfo } from 'api/getFullInfo';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { BackLink, BackLinkIcon } from 'components/common/BackLink.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    getFullInfo(movieId).then(result => {\n      setMovieInfo(result.data);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink to={location}>\n        <BackLinkIcon />\n        Back to movies\n      </BackLink>\n      {movieInfo && (\n        <div>\n          <MovieInfo movie={movieInfo} />\n          <p>Addictional information:</p>\n          <ul>\n            <li>\n              <Link to=\"credits\" state={{ from: location }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["customAxios","axios","baseURL","params","api_key","getFullInfo","id","response","console","log","ratingNormalize","value","GenresList","styled","GenresListItem","Genres","movieGenres","map","genre","name","MovieInfoCard","p","theme","colors","text","MovieInfoPoster","MovieInfoTitle","accent","MovieInfoBlock","MovieInfo","movie","src","poster_path","alt","width","title","release_date","slice","vote_average","overview","genres","BackLink","Link","BackLinkIcon","MdOutlineArrowBack","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","state","from","useEffect","then","result","data","to","Suspense"],"sourceRoot":""}